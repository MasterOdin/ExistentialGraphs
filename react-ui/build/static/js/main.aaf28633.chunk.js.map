{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","menuButton","marginRight","spacing","hide","drawer","width","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","App","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","_React$useState3","_React$useState4","selectedButton","setSelectedButton","_React$useState5","_React$useState6","_React$useState7","_React$useState8","handleModeClick","event","index","react_default","a","createElement","className","CssBaseline","Drawer","variant","anchor","paper","Divider","List","component","aria-label","ListItem","button","selected","onClick","ListItemText","primary","clsx","id","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.aaf28633.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  CssBaseline,\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemText\n} from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\n//Styles for use in the application\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  //Holds the state of whether the sidebar is open\n  const [open, setOpen] = React.useState(true);\n  //Holds the current selected button state\n  const [selectedButton, setSelectedButton] = React.useState(0);\n  //Current Proposition\n  const [selectedProp, setSelectedProp] = React.useState(0);\n  //Current Cut\n  const [selectedCut, setSelectedCut] = React.useState(0);\n\n  //Opening sidebar\n  function sidebarOpen() {\n    setOpen(true);\n  }\n\n  //Closing sidebar\n  function sidebarClose() {\n    setOpen(false);\n  }\n\n  //Changing edit mode\n  function handleModeClick(event, index) {\n    setSelectedButton(index);\n  }\n\n  //Changing current proposition\n  function handlePropClick(event, index) {\n    setSelectedProp(index);\n  }\n\n  //Changing current cut type\n  function handleCutClick(event, index) {\n    setSelectedCut(index);\n  }\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List component=\"nav\" aria-label=\"Add To Graph\">\n          <ListItem\n            button\n            selected={selectedButton === 0}\n            onClick={event => handleModeClick(event, 0)}\n          >\n            <ListItemText primary=\"Proposition\" />\n          </ListItem>\n          <ListItem\n            button\n            selected={selectedButton === 1}\n            onClick={event => handleModeClick(event, 1)}\n          >\n            <ListItemText primary=\"Cut\" />\n          </ListItem>\n        </List>\n        <Divider />\n        <List component=\"nav\" aria-label=\"Operations On Graph\">\n          <ListItem\n            button\n            selected={selectedButton === 2}\n            onClick={event => handleModeClick(event, 2)}\n          >\n            <ListItemText primary=\"Copy\" />\n          </ListItem>\n          <ListItem\n            button\n            selected={selectedButton === 3}\n            onClick={event => handleModeClick(event, 3)}\n          >\n            <ListItemText primary=\"Delete\" />\n          </ListItem>\n          <ListItem\n            button\n            selected={selectedButton === 4}\n            onClick={event => handleModeClick(event, 4)}\n          >\n            <ListItemText primary=\"Delete (Including Children)\" />\n          </ListItem>\n        </List>\n        <Divider />\n        <List component=\"nav\" aria-label=\"Prove Graph\">\n          <ListItem\n            button\n            selected={selectedButton === 5}\n            onClick={event => handleModeClick(event, 5)}\n          >\n            <ListItemText primary=\"Erase DC\" />\n          </ListItem>\n          <ListItem\n            button\n            selected={selectedButton === 6}\n            onClick={event => handleModeClick(event, 6)}\n          >\n            <ListItemText primary=\"Insertion\" />\n          </ListItem>\n          <ListItem\n            button\n            selected={selectedButton === 7}\n            onClick={event => handleModeClick(event, 7)}\n          >\n            <ListItemText primary=\"Erasure\" />\n          </ListItem>\n          <ListItem\n            button\n            selected={selectedButton === 8}\n            onClick={event => handleModeClick(event, 8)}\n          >\n            <ListItemText primary=\"Iteration\" />\n          </ListItem>\n          <ListItem\n            button\n            selected={selectedButton === 9}\n            onClick={event => handleModeClick(event, 9)}\n          >\n            <ListItemText primary=\"Deiteration\" />\n          </ListItem>\n        </List>\n      </Drawer>\n      //Main Context\n      <main className={clsx(classes.content, {})}>\n        This is text\n        <div id=\"workHolder\" />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}